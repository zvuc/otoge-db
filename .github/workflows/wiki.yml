name: Fetch from wiki & sdvx.in

on:
  schedule:
    - cron: '0 2 * * THU'
  workflow_dispatch:

jobs:
  fetch_from_wiki:
    name: Fetch from wiki & sdvx.in
    runs-on: ubuntu-latest

    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Asia/Tokyo"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run wiki script and capture output
        id: run_script
        run: |
          {
            echo "OUTPUT_LOG<<EOF"
            python scripts/update-wiki-data.py --nocolors --escape
            python scripts/update-chartguide-data.py --nocolors --escape
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Extract datestamp from script output
        id: extract_date
        run: echo "datestamp=$(cat data/music-ex.json | jq '.[-1].date | tonumber')" >> "$GITHUB_OUTPUT"

      - name: Check script output
        id: check_script
        run: |
          if [[ "${{ steps.run_script.outputs.OUTPUT_LOG }}" == *"Updated song extra data from wiki"* ]]; then
            echo "Updated song data from wiki. Creating a pull request."
            echo "CREATE_PR=true" >> "$GITHUB_OUTPUT"
          else
            echo "Nothing updated. Skipping pull request creation."
            echo "CREATE_PR=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure Git user
        if: steps.check_script.outputs.CREATE_PR == 'true'
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create new branch and commit changes
        id: checkout_branch_commit
        if: steps.check_script.outputs.CREATE_PR == 'true'
        env:
          UNIQUE_STRING: ${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          git add .
          if echo `git diff --quiet && git diff --staged --quiet`; then
            echo "HAS_DIFFS=false" >> "$GITHUB_OUTPUT"
            echo "No changes. Skipping PR request"
          else
            if git show-ref --quiet refs/heads/update-${{ steps.extract_date.outputs.DATESTAMP }}; then
              echo "Branch already exists, switching to existing branch"
              git checkout update-${{ steps.extract_date.outputs.DATESTAMP }}
            else
              git checkout -b update-${{ steps.extract_date.outputs.DATESTAMP }}
            fi
            git commit -m "[Automated] Apply updated data from wiki ${{ steps.extract_date.outputs.DATESTAMP }}"
            git push origin update-${{ steps.extract_date.outputs.DATESTAMP }}
            echo "Commited changes."
            echo "HAS_DIFFS=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Pull Request
        if: steps.check_script.outputs.CREATE_PR == 'true' && steps.checkout_branch_commit.outputs.HAS_DIFFS == 'true'
        run: |
          gh pr comment ${{ github.ref_name }} \
          --body "${{ steps.run_script.outputs.OUTPUT_LOG }}" || \
          gh pr create \
          -B ${{ github.ref_name }} \
          -H "update-${{ steps.extract_date.outputs.DATESTAMP }}" \
          --title "[Automation] Update website with updated song data (${{ steps.extract_date.outputs.DATESTAMP }})" \
          --body "${{ steps.run_script.outputs.OUTPUT_LOG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
