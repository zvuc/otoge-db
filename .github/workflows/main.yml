name: Fetch new songs and create PR

on:
  schedule:
    - cron: '0 0 * * THU'
  workflow_dispatch:

jobs:
  run_script_and_create_pr:
    name: Run script and create PR
    runs-on: ubuntu-latest

    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Asia/Tokyo"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run main.py script and capture output
        id: run_script
        run: |
          {
            echo "OUTPUT_LOG<<EOF"
            python scripts/main.py --nocolors --escape --skipwiki
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Extract datestamp from script output
        id: extract_date
        run: echo "datestamp=$(cat data/music-ex.json | jq '.[-1].date | tonumber')" >> "$GITHUB_OUTPUT"

      - name: Check script output
        id: check_script
        run: |
          if [[ "${{ steps.run_script.outputs.OUTPUT_LOG }}" == *"New song added"* ]]; then
            echo "New song data downloaded. Creating a pull request."
            echo "CREATE_PR=true" >> "$GITHUB_OUTPUT"
          else
            echo "Nothing updated. Skipping pull request creation."
            echo "CREATE_PR=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure Git user
        if: steps.check_script.outputs.CREATE_PR == 'true'
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create new branch and commit changes
        if: steps.check_script.outputs.CREATE_PR == 'true'
        env:
          UNIQUE_STRING: ${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          if git show-ref --quiet refs/heads/update-${{ steps.extract_date.outputs.DATESTAMP }}; then
            git checkout update-${{ steps.extract_date.outputs.DATESTAMP }}
          else
            git checkout -b update-${{ steps.extract_date.outputs.DATESTAMP }}
          fi
          git add .
          git commit -m "[Automated] Add song data ${{ steps.extract_date.outputs.DATESTAMP }}"
          git push origin update-${{ steps.extract_date.outputs.DATESTAMP }}

      - name: Create Pull Request
        if: steps.check_script.outputs.CREATE_PR == 'true'
        run: |
          gh pr comment ${{ github.ref_name }} \
          --body "${{ steps.run_script.outputs.OUTPUT_LOG }}" || \
          gh pr create \
          --base ${{ github.ref_name }} \
          --head "update-${{ steps.extract_date.outputs.DATESTAMP }}" \
          --title "[Automation] Update website with new song data (${{ steps.extract_date.outputs.DATESTAMP }})" \
          --body "${{ steps.run_script.outputs.OUTPUT_LOG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
