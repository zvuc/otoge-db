name: Fetch new songs and create PR

on:
  push:
    branches:
      - automation
  workflow_dispatch:

jobs:
  run_script_and_create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run main.py script and capture output
        id: run_script
        run: |
          output_log=$(python scripts/main.py)
          {
            echo "OUTPUT_LOG<<EOF"
            ${output_log}
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Extract datestamp from script output
        id: extract_date
        env:
          OUTPUT_LOG: ${{ steps.run_script.outputs.OUTPUT_LOG }}
        run: |
          datestamp=$(echo "${{ env.OUTPUT_LOG }}" | sed -n 's/^.*DATA: \([0-9]\{8\}\).*$/\1/p')

          echo "datestamp=${datestamp}" >> "$GITHUB_ENV"

      - name: Check script output
        id: check_script
        env:
          OUTPUT_LOG: ${{ steps.run_script.outputs.OUTPUT_LOG }}
        run: |
          if [[ "${{ env.OUTPUT_LOG }}" == *"new song data downloaded"* ]]; then
            echo "New song data downloaded. Creating a pull request."
            echo "CREATE_PR=true" >> "$GITHUB_ENV"
          else
            echo "Nothing updated. Skipping pull request creation."
            echo "CREATE_PR=false" >> "$GITHUB_ENV"
          fi

      # - name: Switch to master branch
      #   if: env.create_pr == 'true'
      #   run: git checkout master

      - name: Configure Git user
        env:
          CREATE_PR: ${{ steps.check_script.outputs.CREATE_PR }}
        if: env.CREATE_PR == 'true'
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create new branch and commit changes
        env:
          CREATE_PR: ${{ steps.check_script.outputs.CREATE_PR }}
          DATESTAMP: ${{ steps.extract_date.outputs.DATESTAMP }}
        if: env.CREATE_PR == 'true'
        run: |
          git checkout -b add-new-song-${{ env.DATESTAMP }}
          git add .
          git commit -m "[Automated] Add song data ${{ env.DATESTAMP }}"
          git push origin add-new-song-${{ env.DATESTAMP }}

      - name: Create Pull Request
        env:
          CREATE_PR: ${{ steps.check_script.outputs.CREATE_PR }}
          DATESTAMP: ${{ steps.extract_date.outputs.DATESTAMP }}
          OUTPUT_LOG: ${{ steps.run_script.outputs.OUTPUT_LOG }}
        if: env.CREATE_PR == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          branch: add-new-song-${{ env.DATESTAMP }}
          base: master
          title: "[Automation] Update website with new song data (${{ env.DATESTAMP }})"
          body: ${{ env.OUTPUT_LOG }}
